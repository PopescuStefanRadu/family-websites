<?php
/**
 * @file
 * Code for the cms_working_group feature.
 */

include_once 'cms_working_group.features.inc';

/**
 * Implements hook_menu_alter().
 */
function cms_working_group_menu_alter(&$items) {
    // Set a custom access callback function for our view page display path.
    $items['node/%/wg-documents-reorder']['access callback'] = 'cms_working_group_node_content_custom_access_callback';
}

/**
 * Implements hook_module_implements_alter().
 */
function cms_working_group_module_implements_alter(&$implementations, $hook) {
    // When the implementations of hook_menu_alter are called, we need our module
    // to be called after views, so let's remove it from the implementations then
    // add it to the end.
    if ($hook == 'menu_alter') {
        if (isset($implementations['cms_working_group'])) {
            unset($implementations['cms_working_group']);
            $implementations['cms_working_group'] = FALSE;
        }
    }
}

/**
 * A custom 'access callback' function used by our view page display
 * to determine if its local task menu tab should show up or not.
 */
function cms_working_group_node_content_custom_access_callback($options = array()) {

    // Grab the default access callback function name, prepare the access
    // arguments, then see what the default access call back result is
    // according to views.
    $access_callback = $options[0];
    $access_arguments = $options[1];
    $access = call_user_func_array($access_callback, $access_arguments);

    // If the default access call back was false, then the user is not allowed
    // access.
    if (!$access) {
        return FALSE;
    }

    // So far the user is allowed access from the views' settings, let's now
    // determine if we want to customize the access to the tab.

    // If the node type is not an working_group, then we'll deny access, otherwise grant
    // access.
    $node = node_load(arg(1));
    if ( !empty($node) && $node->type == 'working_group' && user_access(ROLE_CONTENT_MANAGER) ) {
        return TRUE;
    }
    else {
        return FALSE;
    }
}
